{"version":3,"sources":["components/Search.js","components/Welcome.js","components/QueryResults.js","App.js","reportWebVitals.js","index.js"],"names":["GridStyled","styled","div","SearchStyled","ButtonStyled","InputStyled","input","Search","userInput","setUserInput","queryData","setFilteredResults","type","placeholder","value","onChange","e","target","onClick","filteredResults","titles","map","item","Title","fuzzyResults","fuzzy","filter","trim","toLowerCase","res","string","console","log","includes","getFilteredResults","WelcomeStyled","Welcome","ListStyled","TitleStyled","AnswerStyled","QueryResults","index","Answer_Body","App","props","preventDefault","setState","state","this","fetchAnswers","fetch","headers","then","response","json","myJson","error","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"u2BAKO,IAAMA,EAAaC,IAAOC,IAAV,KAIVC,EAAeF,IAAOC,IAAV,KAOZE,EAAeH,IAAOC,IAAV,KAUZG,EAAcJ,IAAOK,MAAV,KAyCTC,EAbD,SAAC,GAA4D,IAA3DC,EAA0D,EAA1DA,UAAWC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,mBAChD,OACI,cAACX,EAAD,UACI,eAACG,EAAD,WACI,cAACE,EAAD,CAAaO,KAAK,OAAOC,YAAY,sCAAsCC,MAAON,EAAWO,SAAU,SAACC,GAAKP,EAAaO,EAAGA,EAAEC,OAAOH,UACtI,cAACV,EAAD,CAAcc,QAAS,SAACF,IAzBb,SAACA,EAAER,EAAUE,EAAUC,GAC9C,IAAIQ,EAAgB,GAEhBC,EAAQV,EAAUW,KAAI,SAAAC,GAAI,OAAIA,EAAKC,SACvC,GAAGf,EAAU,CACT,IAAIgB,EAAeC,IAAMC,OAAOlB,EAAUmB,OAAOC,cAAeR,EAAQ,IAAIC,KAAI,SAAAQ,GAAG,OAAIA,EAAIC,UAC3FC,QAAQC,IAAIR,GACZL,EAAkBT,EAAUgB,QAAO,SAAAJ,GAAS,GAAGE,EAAaS,SAASX,EAAKC,OAAQ,OAAOD,KAI7FX,EAAmBQ,GAcsBe,CAAmBlB,EAAGR,EAAWE,EAAWC,IAAzE,0B,iJCvDT,IAAMwB,EAAgBlC,IAAOC,IAAV,KAcXkC,EALA,WACX,OAAO,cAACD,EAAD,iE,oXCVJ,IAAME,EAAapC,IAAOC,IAAV,KAOVoC,EAAcrC,IAAOC,IAAV,KAOXqC,EAAetC,IAAOC,IAAV,KAIV,SAASsC,EAAT,GAAyC,IAAlBrB,EAAiB,EAAjBA,gBAClC,OACA,8BAEMA,EAAgBE,KAAI,SAACQ,EAAKY,GAAW,OAAO,eAACJ,EAAD,WACxC,eAACC,EAAD,wBAAwBT,EAAIN,SAC5B,cAACgB,EAAD,UAAc,2CAAcV,EAAIa,mBAFyBD,Q,IC6DxDE,E,kDA7Eb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAaRnC,aAAa,SAACO,EAAGR,GACfQ,EAAE6B,iBACF,EAAKC,SAAS,CAACtC,eAhBC,EAoBlBG,mBAAmB,SAACQ,GAElB,EAAK2B,SAAS,CAAC3B,qBApBf,EAAK4B,MAAM,CACTvC,UAAU,GACVC,aAAa,EAAKA,aAClBC,UAAU,GACVS,gBAAgB,GAChBR,mBAAmB,EAAKA,oBAPV,E,gEA6BhBqC,KAAKC,iB,0JAKL,IACEC,MAAM,2BACL,CACCC,QAAU,CACR,eAAgB,mBAChB,OAAU,sBAIXC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKT,SAAS,CAACpC,UAAU6C,IACzBxB,QAAQC,IAAI,EAAKe,MAAMrC,cAE5B,MAAM8C,GACLzB,QAAQC,IAAIwB,G,gIAUd,OAEE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQhD,UAAWwC,KAAKD,MAAMvC,UAAWC,aAAcuC,KAAKD,MAAMtC,aAAcC,UAAWsC,KAAKD,MAAMrC,UAAWC,mBAAoBqC,KAAKD,MAAMpC,qBAChJ,cAAC6B,EAAD,CAAcrB,gBAAiB6B,KAAKD,MAAM5B,yB,GAnEhCsC,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c1366a91.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport fuzzy from 'fuzzy'\n\n\nexport const GridStyled = styled.div`\nfont-family: 'Hind', sans-serif;\ncolor: azure;\n`\nexport const SearchStyled = styled.div`\ndisplay:flex;\njustify-content:center;\nmargin:50px;\n\n`\n\nexport const ButtonStyled = styled.div`\nbackground-color:#C3BEF7;\npadding:5px 15px;\nborder-radius:10px;\nmargin-left:10px;\n&:hover{\n    background-color:#8A4FFF;\n    cursor:pointer\n}\n`\nexport const InputStyled = styled.input`\npadding:5px 15px;\nborder-radius:10px;\nwidth:30%\n`\n\n\n\nconst getFilteredResults = (e,userInput,queryData,setFilteredResults)=>{\n    let filteredResults=[]\n   \n    let titles= queryData.map(item => item.Title)\n    if(userInput){\n        let fuzzyResults = fuzzy.filter(userInput.trim().toLowerCase(), titles, {}).map(res => res.string) \n        console.log(fuzzyResults);\n        filteredResults = queryData.filter(item => {if(fuzzyResults.includes(item.Title)){return item} })\n      \n    }\n\n    setFilteredResults(filteredResults)\n  \n\n}\n\n\n\n\n\nconst Search =({userInput, setUserInput, queryData, setFilteredResults})=>{\n    return (\n        <GridStyled>\n            <SearchStyled>\n                <InputStyled type=\"text\" placeholder=\"e.g.how to create react template...\" value={userInput} onChange={(e)=>{setUserInput(e, e.target.value)}}/>\n                <ButtonStyled onClick={(e)=>{getFilteredResults(e, userInput, queryData, setFilteredResults)}}>search</ButtonStyled>\n            </SearchStyled>\n       \n        \n        </GridStyled>\n    )\n}\n\nexport default Search","import React from 'react'\nimport styled from 'styled-components'\n\n\nexport const WelcomeStyled = styled.div`\ntext-align:center;\nmargin-top:100px;\nfont-size:2em;\ncolor: azure;\n\n\n`\n\nconst Welcome =()=>{\n    return <WelcomeStyled>Welcome to codecache! search your questions below</WelcomeStyled>\n}\n\n\nexport default Welcome\n","\nimport React from 'react'\nimport styled from 'styled-components'\n\nexport const ListStyled = styled.div`\ncolor: azure;\ndisplay:flex;\nflex-direction:column;\nmargin:20px;\n`\n\nexport const TitleStyled = styled.div`\nbackground-color: #C3BEF7;\nborder-radius:10px;\ncolor:black;\npadding:10px\n`\n\nexport const AnswerStyled = styled.div`\npadding:10px\n`\n\nexport default function QueryResults({filteredResults}){\n    return (\n    <div>\n      {\n          filteredResults.map((res, index )=> {return <ListStyled key={index}>\n              <TitleStyled>Question: {res.Title}</TitleStyled>\n              <AnswerStyled><pre>Answer: {res.Answer_Body}</pre></AnswerStyled>\n          </ListStyled>})\n      }\n       \n    </div>\n    )\n}","import React, { Component } from 'react'\nimport Search from './components/Search'\nimport Welcome from './components/Welcome'\nimport QueryResults from './components/QueryResults'\n\n\n\n\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.state={\n      userInput:\"\",\n      setUserInput:this.setUserInput,\n      queryData:[],\n      filteredResults:[],\n      setFilteredResults:this.setFilteredResults\n\n\n    }\n  }\n\n\n  setUserInput=(e, userInput)=>{\n    e.preventDefault()\n    this.setState({userInput})\n  }\n\n\n  setFilteredResults=(filteredResults)=>{\n  \n    this.setState({filteredResults})\n\n\n\n  }\n\n  componentDidMount(){\n    this.fetchAnswers()\n  }\n\n\n  async fetchAnswers(){\n    try{\n      fetch('QueryResults_js_all.json'\n      ,{\n        headers : { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n         }\n      }\n      )\n        .then(response=>{\n          return response.json();\n        })\n        .then(myJson=> {\n          this.setState({queryData:myJson})\n          console.log(this.state.queryData);\n        });\n    }catch(error){\n      console.log(error);\n    }\n  }\n\n  \n\n\n\n\n  render(){\n    return (\n\n      <div>\n        <Welcome/>\n        <Search userInput={this.state.userInput} setUserInput={this.state.setUserInput} queryData={this.state.queryData} setFilteredResults={this.state.setFilteredResults}/>\n        <QueryResults filteredResults={this.state.filteredResults}/>\n      </div>\n      \n    )\n  }\n}\n\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}